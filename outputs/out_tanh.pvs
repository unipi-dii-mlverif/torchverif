cruisenn_tanh: THEORY
    BEGIN 
        IMPORTING matrices@matrices
		IMPORTING lnexp@ln_exp
		IMPORTING lnexp@exp_series
		IMPORTING exp_strategies
	linear0: MatrixMN(3,9) = (:(:-0.599691,0.364658,-0.637507,0.412712,-0.097102,-0.279176,-0.599833,-0.376312,0.336222:),(:0.146966,-0.220218,0.385144,0.351899,0.053985,0.574442,-0.570637,0.322523,-0.260302:),(:1.514268,2.303468,-0.648349,-0.090035,1.320617,-0.777853,-0.099061,-2.277836,0.457567:):)
	linear_bias0: MatrixMN(1,9) = (:(:-0.309031,-0.374588,-0.811104,-0.007218,0.328503,0.062669,-0.033401,0.213295,1.080161:):)
	linear2: MatrixMN(9,1) = (:(:1.765456:),(:0.455343:),(:1.145311:),(:-0.512913:),(:0.696255:),(:-0.532288:),(:0.655821:),(:1.223822:),(:-1.846871:):)
	linear_bias2: MatrixMN(1,1) = (:(:-0.498080:):)





	
	

    	tanhMat(M: Matrix): MatrixMN(rows(M),columns(M)) =
        form_matrix(LAMBDA (i,j:nat): tanh(entry(M)(i,j)), rows(M), columns(M));


	%ego velocity
	x0inreal: TYPE = { r: real | r>= 20 AND r<= 25 } 
	
	%rel position
	x1inreal: TYPE = { r: real | r>= 0 AND r<= 50 }
	
	%rel velocity
	x2inreal: TYPE = { r: real | r>= -2 AND r<=2 }

	net(input: Matrix): Matrix =		
		tanhMat(input*linear0+linear_bias0)*linear2+linear_bias2

	% @QED value_tester proved by federico on Fri, 27 Oct 2023 19:23:38 GMT
	value_tester: LEMMA
		entry( net( (:(:2,2,2:):) ) )(0,0) >= -5

	% @QED should_decelerate proved by federico on Wed, 15 Nov 2023 09:08:33 GMT
	should_decelerate: THEOREM
		FORALL (x0in: x0inreal,x1in: x1inreal,x2in: x2inreal):
			x1in < 20 IMPLIES entry( net( (:(:25,x1in,-2:):) ) )(0,0) <= 0 
	

	lemma_n: LEMMA
		FORALL (x0in: x0inreal,x1in: x1inreal,x2in: x2inreal):
		x1in < 20 IMPLIES 
		-221751/62500 + 1846871/500000 * sigmoid(8570577/500000 - 130151/250000*x1in) < -221751/62500 + 1846871/500000

        lemma_ns: LEMMA
		FORALL (x0in: x0inreal,x1in: x1inreal,x2in: x2inreal):
		x1in < 20 IMPLIES 
		-221751/62500 - 1846871/500000 * sigmoid(8570577/500000 - 130151/250000*x1in) > -221751/62500 - 1846871/500000

	


	network_bounds: THEOREM
		FORALL (x0in: x0inreal,x1in: x1inreal,x2in: x2inreal):
			entry( net( (:(:x0in,x1in,x2in:):) ) )(0,0) >= -10

END cruisenn_tanh
